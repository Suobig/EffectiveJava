package net.suobig.effectivejava.ch1createAndDelete;

public class U4NonInstantiable {
/* Классы, которые представляют собой наборы статичных методов и полей, 
считаются плохим тоном в программировании, однако у них есть своя область 
применения - они могут использоваться для группировки методов для примитивов
и массивов, как это делается в java.lang.Math или java.util.Arrays. Они также
могут использоваться для группировки статичных медотов, например статичных 
фабрик или объектов, реализующих конкретный интерфейс, как это сделано в 
java.util.Collections. 
  Подобные функциональные классы не предполагают создание экземпляров. Однако, 
если в классе не объявлен конструктора, компилятор по умолчанию создает 
публичный конструктор. 
  Не получится добиться невозможности создать экземпляр просто объявив
класс абстрактным - так как он него можно унаследоваться и создать экземпляр.
Более того, у пользователя абстраткного класса может сложиться впечатление, 
что от него надо наследовать. Можно добиться цели просто обявив private 
конструктор: */
    public class UtilityClass {
        //Выключаем автоматическое создание public конструктора
        private UtilityClass() {
            throw new AssertionError();
        }
    }
/* 
  AssertionError не обязательна, она лишь исключает случайный вызов конструктора
непосредственно в теле класса.
  В качестве побочного эффекта, от класса с private конструктора нельзя 
наследовать.
 */
}
